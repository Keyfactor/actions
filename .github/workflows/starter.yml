name: Bootstrap Starter Workflow
on:
  workflow_call:
    secrets:
      token:
        description: 'GitHub token'
        required: true
      APPROVE_README_PUSH:
        description: 'Token to add-and-commit generated readme'
        required: true  
      gpg_key:
        description: 'GPG Private Key'
        required: true
      gpg_pass:
        description: 'GPG Passphrase'
        required: true


jobs:
  call-assign-from-json-workflow:
    uses: Keyfactor/actions/.github/workflows/assign-env-from-json.yml@v2

  call-get-primary-language:
    outputs:
      primary_language: ${{ steps.read.outputs.primary_language }}
    runs-on: ubuntu-latest
    name: Detect Primary Language
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Read primary language
        id: read
        uses: fiddlermikey/action-get-primary-language@v1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Display type
        id: display
        run: |
          echo "primary_language=${{ steps.read.outputs.primary_language}}" | tee -a "$GITHUB_OUTPUT" | tee -a $GITHUB_STEP_SUMMARY

  call-goreleaser-exists:
    outputs:
      goreleaser-exists: ${{ steps.check_files.outputs.files_exists }}
    runs-on: ubuntu-latest
    name: Check for .goreleaser file
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v2
        with:
          files: ".goreleaser.y*ml"

  setup_platforms:
    runs-on: ubuntu-latest
    outputs:
      platform_matrix: ${{ steps.vars.outputs.platform_matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create an array from platform_list input #  
        id: vars
        run: 
          echo "platform_matrix=`cat integration-manifest.json | jq '.platform_matrix'`" | tee -a $GITHUB_OUTPUT | tee -a $GITHUB_STEP_SUMMARY

  call-create-github-release-workflow:
    uses: Keyfactor/actions/.github/workflows/github-release.yml@v2

  call-dotnet-build-and-release-workflow:
    needs: [call-get-primary-language, call-assign-from-json-workflow, call-create-github-release-workflow]
    if: needs.call-get-primary-language.outputs.primary_language == 'C#'
    uses: keyfactor/actions/.github/workflows/dotnet-build-and-release.yml@v2
    with:
      release_version: ${{ needs.call-create-github-release-workflow.outputs.release_version }}
      release_url: ${{ needs.call-create-github-release-workflow.outputs.release_url }}
      release_dir: ${{ needs.call-assign-from-json-workflow.outputs.release_dir }}
      integration_type: ${{ needs.call-assign-from-json-workflow.outputs.integration_type }} 
    secrets: 
      token: ${{ secrets.token  }}

  call-go-build-and-release-workflow:
    needs: [call-get-primary-language, call-assign-from-json-workflow, call-create-github-release-workflow,call-goreleaser-exists]
    if: needs.call-get-primary-language.outputs.primary_language == 'Go' && needs.call-goreleaser-exists.outputs.goreleaser-exists == 'true' 
    uses: keyfactor/actions/.github/workflows/go-build-and-release.yml@v2
    with: 
      release_version: ${{ needs.call-create-github-release-workflow.outputs.release_version }}
    secrets: 
      token: ${{ secrets.GITHUB_TOKEN }}
      gpg_key: ${{ secrets.gpg_key }}
      gpg_pass: ${{ secrets.gpg_pass }}

  call-container-build-and-release-workflow:
    needs: [call-get-primary-language, call-assign-from-json-workflow, call-create-github-release-workflow,call-goreleaser-exists,setup_platforms]
    if: needs.call-get-primary-language.outputs.primary_language == 'Go' && needs.call-goreleaser-exists.outputs.goreleaser-exists == 'false'
    uses: keyfactor/actions/.github/workflows/container-build-and-release.yml@ab#53666-container-build
    with: 
      release_version: ${{ needs.call-create-github-release-workflow.outputs.release_version }}
      platform_list: ${{ fromJson(needs.setup_platforms.outputs.platform_matrix) }}
    secrets: 
      token: ${{ secrets.GITHUB_TOKEN }}

  call-generate-readme-workflow:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    uses: Keyfactor/actions/.github/workflows/generate-readme.yml@release-2.3
    secrets:
      token: ${{ secrets.APPROVE_README_PUSH }}

  call-update-catalog-workflow:
    if: inputs.update_catalog == 'True' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    uses: Keyfactor/actions/.github/workflows/update-catalog.yml@v2
    secrets: 
      token: ${{ secrets.SDK_SYNC_PAT }}

  call-repository-configuration-workflow:
    if: github.event_name == 'create' && startsWith(github.ref, 'refs/heads/release-')
    uses: Keyfactor/actions/.github/workflows/kf-configure-repo.yml@v2
    secrets: 
      token: ${{ secrets.token }}

  #call-post-release-cleanup-workflow:
  #  needs: [call-dotnet-build-and-release-workflow, call-assign-from-json-workflow, call-create-github-release-workflow]
  #  if: needs.call-create-github-release-workflow.outputs.IS_FULL_RELEASE == 'True'
  #  uses: Keyfactor/actions/.github/workflows/kf-post-release.yml@v2
  #  secrets: 
  #    token: ${{ secrets.token }}

